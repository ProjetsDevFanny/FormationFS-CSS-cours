/* Variables pour les thèmes de couleurs (souvent 4 couleurs par plus) */
:root {
  --color1: rgb(227, 248, 202);
  --color2: rgb(239, 156, 120);
  --color3: rgb(240, 119, 67);
  --color4: rgb(165, 114, 91);
  --color5: rgb(255, 255, 255);
}

* {
  /* Pour enlever tous les margin et padding de tous les éléments */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* Aide à mieux arranger nos boîtes */
}

body {
  background: url(/assets/sunrise.png) center/cover;
  /* Pour que ça couvre la largeur */
  height: 100vh;
  /* Pour que ça couvre toute la hauteur du body = tu fais 100% de la taille que l'utilisateur a*/
  /* POUR LES WIDTH = EN % ! */
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: var(--color1);
  display: flex;
  align-items: center;
  /* La suite ne fait rien, car la div est en display: block */
  justify-content: center;
  /* Pour empêcher l'apparition d'une scroll barre quand la feuille sort à droite du body: */
  overflow: hidden;
}

.card {
  background: rgba(0, 0, 0, 0.258);
  /* Méthode qui fait des calculs: ici taille max moins 50px de chaque côté :*/
  width: calc(100% - 50px);
  padding: 20px 20px 6px;
  /* haut (gauche et droite) bas */
  box-shadow: 0px 0px 11px 6px rgba(0, 0, 0, 0.662);
  border-radius: 6px;
  /* Filtre flou derrière : */
  backdrop-filter: blur(5px);
}

.card::before:hover {
  /* Toujours un content avec before et after ! */
  /* Insertion d'une icône depuis site "HTML Symbols" */
  content: "\2606";
  position: absolute;
  top: -2px;
  right: 10px;
  /* Pour agrandir l'icône: */
  font-size: 2rem;
}

h1 {
  /* Détache le titre du texte: */
  margin-bottom: 21px;
  /* Pour positionner la barre : */
  position: relative;
}

/* Méthode pour créer une barre: */
h1::after {
  /* Toujours "content" et "position: absolute" ! */
  content: "";
  position: absolute;
  background: var(--color1);
  height: 1px;
  width: 100%;
  bottom: -14px;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  /* scaleX(0)= sur sa largeur, donc là on ne la voit pas */
  animation: h1anim 8s ease-in-out forwards;
  /* Forwards= pour que l'animation reste à la fin 
  Ease in out = lent au début à la fin , accèlère au milieu*/
  /* Pour que l'animation commence à gauche: */
  /* transform-origin: left; */
}

@keyframes h1anim {
  100% {
    /* Il faut remettre le "translateX(-50%)" sinon, il est écrasé */
    transform: translateX(-50%) scaleX(1);
  }
}

.grid-container {
  display: grid;
  /* POUR LES WIDTH = EN % ! */
  grid-template-columns: 20% 80%;
}

.polygon-container {
  /* propriété pour ombre du polygone: */
  filter: drop-shadow(1px 15px 3px #fadc7881);
  /* Pour centrer l'enfant, comme ci-après, il faut mettre le parent en grid: place-self: center; */
  /* place-self: center left; */
  place-self: center left;

}

.polygon {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  /* Gradient de couleur: direction: 135deg, on commence à jaune et on fini à rouge: il vaut mieux rester en 2 couleurs slmt */
  /* background: linear-gradient(135deg, var(--color2) 0%, var(--color3) 100%); */
  background-image: linear-gradient(-20deg, #fadc78 10%, #d74a23 80%);
  height: 100px;
  /* On ne peut pas donner d'ombre directement au polygone: il faudra passer par son parent et une propriété différente */
  /* En grid, dans tous les cas, les éléments font width: 100%, c'est moche */
  width: 100px;
}

.polygon::after {
  content: "CSS 3";
  position: absolute;
  color: var(--color5);
  font-weight: 500;
  /* background: #e2ed1529; */
  /* La, l'élément sera centré par rapport à son coin haut gauche */
  top: 50%;
  left: 50%;
  /* Pour centre par rapport au centre de l'élément: */
  transform: translate(-50%, -50%) rotate(360deg);
  width: 90px;
  padding: 4px;
  text-align: center;
}

p {
  line-height: 28px;
  margin: 20px 0;
  /* Méthode assez récente: webkit */
  /* S on souhaite que notre paragraphe face 20 lignes quoi qu'il en soit (pour ne pas bouger toute la page */
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  /* VScode demande d'écrire tout de même la proriété: line-clamp: */
  line-clamp: 4;
  overflow: hidden;
  text-align: justify;
}

/* Pour changer la couleur de la sélection du texte: */
p::selection {
  background: #f091044b;
  color: rgb(0, 0, 0);
}

.checkbox-container {
  display: flex;
  justify-content: space-evenly;
  margin: 20px 0 30px;
  /* haut dr/gche bas */
  perspective: 50px;
  /* Elle va de 0 à 1000px: plus c'est petit plus perspective est grande et inversement. */
}

/* Pour enlever la case cochée de la checkbox */
input[type="checkbox"] {
  display: none;
}

/* Quand l'input est coché, tu m'appliques le style du label qui suit: */
input[type="checkbox"]:checked+label {
  background: rgba(156, 134, 243, 0.39);
  /* background-image: linear-gradient(-20deg, #fadc78 10%, #d74a23 80%); */
  transform: scale(1.1);
  filter: brightness(105%)
    /* blur(5px); */
}

/* Quand l'input est coché, tu m'appliques le style de tous labels qui suivent: */
/* input[type="checkbox"]:checked ~ label {
background: var(--color3);
} */

label {
  cursor: pointer;
  border: 1px solid var(--color4);
  padding: 10px;
  border-radius: 10px;
  /* Mettre les animations sur les labels pour l'avoir en entrée et en sortie */
  transition: 0.2s;
  /* Utilisateur ne peut pas sélectionner le texte. */
  user-select: none;
}

/* "Animation au hover, que sur le 1er label slmt: avec: label:first-of-type:hover { */

label:hover {
  animation: label1 1s infinite linear;
  /* linear: effet plus doux */
}

@keyframes label1 {
  50% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}

/* On vise le 4ème enfant de "checkbox-container" (voir l'inspecteur)*/
label:nth-child(4):hover {
  animation: label2 2s infinite linear forwards;
}

/* effet 3D: */
/* Ne pas oublier de mettre la perspective au parent: ici "checkbox-container" ! */
@keyframes label2 {
  33% {
    transform: translateZ(30px);
  }

  66% {
    transform: translateZ(-20px);
    /* chiffre négatif: élément s'éloigne de nous */
  }

  100% {
    transform: translateZ(0);
  }
}

.e-mail {
  text-align: center;
  margin-bottom: 20px;
}

.e-mail input {
  padding: 5px;
  border-radius: 6px;
  outline: none;
  /* Ajouter cette bordure pour ne pas faire bouger tout le texte du haut quand on focus sur le e-mail. */
  border: 3px solid transparent;
  transition: 0.3s;
  text-align: center;
  font-size: 1.1rem;
  color: var(--color3);
  /* Faire un responsive plus facilement: entre 180px et 300px, la width = 35%, au-delà la taille ne changera pas.*/
  min-width: 180px;
  width: 35%;
  max-width: 300px;
}

input[type="text"]:focus {
  background: transparent;
  border: 3px solid var(--color2);
  /* Attention quand on ajoute cette bordure, cela déforme et bouge le texte au dessus ! Moche ! */
  border-radius: 50px;
}

input[type="text"]::placeholder {
  color: var(--color2);
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

button {
  cursor: pointer;
  background: var(--color2);
  color: var(--color5);
  border: none;
  font-size: 1.3rem;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  padding: 10px 20px;
  border-radius: 50px;
  /* Centrage du bouton: attention il est en display: inline-block !(= il est centré dans la zone dans laquelle il est surbrillé, dans l'inspecteur) donc "margin:0 auto" ne marche pas ! Donc il faut qu'il soit en "inline:block" = Cf inspecter pour votre sa zone de surbrillance */
  margin: 0 auto;
  /* haut/bas droite/gauche */
  /* Si 3 valeurs : margin: 2px 3px 4px = haut gche/droite bas */
  display: block;
  /* Attention la transition dans le button et pas dans le hover, pour avoir aussi l'effet quand on sort */
  transition: 0.5s;
}

button:hover {
  letter-spacing: 2px;
}

/* Quand on clic sur le button: */
button:active {
  transform: scale(1.2);
}

button:hover+a,
a:hover {
  opacity: 1;
  transform: translateY(0);
  /* Pour enlever le petit bug sur le lien */
   /* Ajouter aussi dans a = visibility: hidden; */
  visibility: visible;
}

a {
  color: var(--color2);
  text-align: center;
  display: block;
  margin: 20px 0px;
  font-size: 0.8rem;
  opacity: 0.2;
  transform: translateY(20px);
  transition: 0.5s;
  visibility: hidden;
}

a:hover {
  color: whitesmoke;
}

/* Paramètrage de la feuille */
/* Elle est a côté de la card, car elle est en flex */
img {
  height: 50px;
  position: absolute;
  filter: drop-shadow(0px 6px 3px rgba(202, 164, 40, 0.571));
  /* z-index: -1; */
  animation: leaf-trip 15s infinite linear;
}

@keyframes leaf-trip {
  0% {
    top: 2%;
    left: 2%;
    transform: rotate(90deg);
}
10% {
    top: 6%;
    left: 30%;
    transform: rotate(0deg);
}
20% {
    top: 9%;
    left: 60%;
    transform: rotate(-40deg);
}
30% {
    top: 0%;
    left: 80%;
    transform: rotate(-50deg);
}
40% {
    top: 20%;
    left: 102%;
    transform: rotate(80deg);
}
50% {
    top: 50%;
    left: 90%;
    transform: rotate(30deg);
}
60% {
    top: 60%;
    left: 80%;
    transform: rotate(312deg);
}
70% {
    top: 80%;
    left: 60%;
    transform: rotate(263deg);
}
80% {
    top: 60%;
    left: 50;
    transform: rotate(200deg);
}
90% {
    top: 40%;
    left: 30;
    transform: rotate(10deg);
}
100% {
    top: 2%;
    left: 2%;
    transform: rotate(90deg);
}
}
